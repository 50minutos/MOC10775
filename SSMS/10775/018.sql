USE DB

SELECT * 
FROM sys.dm_exec_requests

SELECT * 
FROM sys.dm_exec_sessions 
WHERE is_user_process = 1

EXEC SP_WHO2

SELECT S.ORIGINAL_LOGIN_NAME, S.PROGRAM_NAME, R.COMMAND, 
       R.WAIT_TYPE, R.WAIT_TIME, R.BLOCKING_SESSION_ID, R.SQL_HANDLE
FROM SYS.DM_EXEC_REQUESTS AS R
INNER JOIN SYS.DM_EXEC_SESSIONS AS S
ON R.SESSION_ID = S.SESSION_ID		
WHERE S.IS_USER_PROCESS = 1

SELECT S.ORIGINAL_LOGIN_NAME, S.PROGRAM_NAME, R.COMMAND, T.TEXT,
       R.WAIT_TYPE, R.WAIT_TIME, R.BLOCKING_SESSION_ID
FROM SYS.DM_EXEC_REQUESTS AS R
INNER JOIN SYS.DM_EXEC_SESSIONS AS S
ON R.SESSION_ID = S.SESSION_ID		
OUTER APPLY SYS.DM_EXEC_SQL_TEXT(R.SQL_HANDLE) AS T
WHERE S.IS_USER_PROCESS = 1

SELECT S.ORIGINAL_LOGIN_NAME, S.PROGRAM_NAME,  R.COMMAND, 
       (SELECT TOP (1) SUBSTRING(T.TEXT, R.STATEMENT_START_OFFSET / 2 + 1, 
			                     ((CASE WHEN R.STATEMENT_END_OFFSET = -1 
                                   THEN (LEN(CONVERT(NVARCHAR(MAX), T.TEXT)) * 2) 
                                   ELSE R.STATEMENT_END_OFFSET 
                                   END)  - R.STATEMENT_START_OFFSET) / 2 + 1)) AS SQLSTATEMENT,
       R.WAIT_TYPE, R.WAIT_TIME, R.BLOCKING_SESSION_ID
FROM SYS.DM_EXEC_REQUESTS AS R
INNER JOIN SYS.DM_EXEC_SESSIONS AS S
ON R.SESSION_ID = S.SESSION_ID
OUTER APPLY SYS.DM_EXEC_SQL_TEXT (R.SQL_HANDLE) AS T		
WHERE S.IS_USER_PROCESS = 1

SELECT CACHEOBJTYPE, 
       OBJTYPE , 
       COUNT(*) AS COUNTOFPLANS, 
       SUM(USECOUNTS) AS USAGECOUNT,
       SUM(USECOUNTS)/CAST(COUNT(*)AS FLOAT) AS AVGUSED , 
       SUM(SIZE_IN_BYTES)/1024./1024. AS SIZEINMB
FROM SYS.DM_EXEC_CACHED_PLANS
GROUP BY CACHEOBJTYPE, OBJTYPE
ORDER BY COUNTOFPLANS DESC

SELECT TOP (10) TOTAL_LOGICAL_READS/EXECUTION_COUNT AS AVGREADS,
                SUBSTRING(ST.TEXT, (QS.STATEMENT_START_OFFSET/2) + 1,
                ((CASE STATEMENT_END_OFFSET 
                  WHEN -1 THEN DATALENGTH(ST.TEXT)
                  ELSE QS.STATEMENT_END_OFFSET END 
                 - QS.STATEMENT_START_OFFSET)/2) + 1) AS STATEMENTTEXT
FROM SYS.DM_EXEC_QUERY_STATS AS QS
CROSS APPLY SYS.DM_EXEC_SQL_TEXT(QS.SQL_HANDLE) AS ST
ORDER BY AVGREADS DESC

SELECT DB_NAME(FS.DATABASE_ID) AS DATABASENAME,
       MF.NAME AS FILENAME,
       MF.TYPE_DESC,
       FS.*
FROM SYS.DM_IO_VIRTUAL_FILE_STATS(NULL,NULL) AS FS
INNER JOIN SYS.MASTER_FILES AS MF
ON FS.DATABASE_ID = MF.DATABASE_ID
AND FS.FILE_ID = MF.FILE_ID
ORDER BY FS.DATABASE_ID, FS.FILE_ID DESC

SELECT * 
FROM SYS.DM_OS_WAIT_STATS

--MOSTRAR MONITOR DE PERFORMANCE

--MOSTRAR MONITOR DE RECURSOS

--MOSTRAR DATA COLLECTOR

--MOSTRAR REPORTS DO DATA COLLECTOR

